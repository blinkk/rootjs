/** Root.js CMS types. This file is autogenerated. */

export interface RootCMSImage {
  src: string;
  width?: number;
  height?: number;
  alt?: string;
}

export type RootCMSOneOf<T = any> = T & {
  _type: string;
}

export interface RootCMSRichTextBlock {
  type: string;
  data: any;
}

export interface RootCMSRichText {
  blocks: RootCMSRichTextBlock[];
}

export interface RootCMSReference {
  /** The id of the doc, e.g. "Pages/foo-bar". */
  id: string;
  /** The collection id of the doc, e.g. "Pages". */
  collection: string;
  /** The slug of the doc, e.g. "foo-bar". */
  slug: string;
}

export interface RootCMSDoc<Fields extends {}> {
  /** The id of the doc, e.g. "Pages/foo-bar". */
  id: string;
  /** The collection id of the doc, e.g. "Pages". */
  collection: string;
  /** The slug of the doc, e.g. "foo-bar". */
  slug: string;
  /** System-level metadata. */
  sys: {
    createdAt: number;
    createdBy: string;
    modifiedAt: number;
    modifiedBy: string;
    firstPublishedAt?: number;
    firstPublishedBy?: string;
    publishedAt?: number;
    publishedBy?: string;
    locales?: string[];
  };
  /** User-entered field values from the CMS. */
  fields?: Fields;
}

/** Generated from `/blocks/CodeBlock/CodeBlock.schema.ts`. */
export interface CodeBlockFields {
  /** ID. Used for deep linking, tracking, etc. */
  id?: string;
  /** Module Options. Layout and display options. */
  options?: string[];
  /** Language */
  language?: string;
  /** Code */
  code?: string;
}

/** Generated from `/blocks/CopyBlock/CopyBlock.schema.ts`. */
export interface CopyBlockFields {
  /** ID. Used for deep linking, tracking, etc. */
  id?: string;
  /** Module Options. Layout and display options. */
  options?: string[];
  /** Eyebrow. Small text above the title. */
  eyebrow?: string;
  /** Title. Main headline title. */
  title?: string;
  /** Body copy. Headline body copy. */
  body?: RootCMSRichText;
}

/** Generated from `/blocks/ImageBlock/ImageBlock.schema.ts`. */
export interface ImageBlockFields {
  /** ID. Used for deep linking, tracking, etc. */
  id?: string;
  /** Module Options. Layout and display options. */
  options?: string[];
  /** Image */
  image?: RootCMSImage;
}

/** Generated from `/collections/Pages.schema.ts`. */
export interface PagesFields {
  /** Meta */
  meta?: {
    /** Title. Page title. */
    title?: string;
    /** Description. Description for SEO and social shares. */
    description?: string;
    /** Image. Meta image for social shares. Recommended: 1400x600 JPG. */
    image?: RootCMSImage;
  };
  /** Content */
  content?: {
    /** Modules. Compose the page by adding one or more modules. */
    modules?: RootCMSOneOf[];
  };
}

/** Generated from `/collections/Pages.schema.ts`. */
export type PagesDoc = RootCMSDoc<PagesFields>;

/** Generated from `/templates/Divider/Divider.schema.ts`. */
export interface DividerFields {
  /** ID. Used for deep linking, tracking, etc. */
  id?: string;
  /** Module Options. Layout and display options. */
  options?: string[];
  /** Spacer. Optional. Vertical spacing above and below the divider. */
  spacer?: {
    /** Desktop Height. Height of the spacer for the desktop layout. If blank, defaults to 80. */
    desktopHeight?: string;
    /** Tablet Height. Height of the spacer for the tablet layout. If blank, defaults to the desktop size. */
    tabletHeight?: string;
    /** Mobile Height. Height of the spacer for the mobile layout. If blank, defaults to the desktop size. */
    mobileHeight?: string;
  };
}

/** Generated from `/templates/Section/Section.schema.ts`. */
export interface SectionFields {
  /** ID. Used for deep linking, tracking, etc. */
  id?: string;
  /** Description. Required. Accessibility description for screen readers. */
  description?: string;
  /** Module Options. Layout and display options. */
  options?: string[];
  /** Modules */
  modules?: RootCMSOneOf[];
}

/** Generated from `/templates/Spacer/Spacer.schema.ts`. */
export interface SpacerFields {
  /** Desktop Height. Height of the spacer for the desktop layout. If blank, defaults to 80. */
  desktopHeight?: string;
  /** Tablet Height. Height of the spacer for the tablet layout. If blank, defaults to the desktop size. */
  tabletHeight?: string;
  /** Mobile Height. Height of the spacer for the mobile layout. If blank, defaults to the desktop size. */
  mobileHeight?: string;
}

/** Generated from `/templates/Template50x50/Template50x50.schema.ts`. */
export interface Template50x50Fields {
  /** ID. Used for deep linking, tracking, etc. */
  id?: string;
  /** Module Options. Layout and display options. */
  options?: string[];
  /** Left Section */
  leftSection?: RootCMSOneOf;
  /** Right Section */
  rightSection?: RootCMSOneOf;
}

/** Generated from `/templates/TemplateHeadline/TemplateHeadline.schema.ts`. */
export interface TemplateHeadlineFields {
  /** ID. Used for deep linking, tracking, etc. */
  id?: string;
  /** Module Options. Layout and display options. */
  options?: string[];
  /** Eyebrow. Small text above the title. */
  eyebrow?: string;
  /** Title. Main headline title. */
  title?: string;
  /** Body copy. Headline body copy. */
  body?: RootCMSRichText;
}

/** Generated from `/templates/TemplateImage/TemplateImage.schema.ts`. */
export interface TemplateImageFields {
  /** ID. Used for deep linking, tracking, etc. */
  id?: string;
  /** Module Options. Layout and display options. */
  options?: string[];
  /** Image */
  image?: RootCMSImage;
}

/** Generated from `/templates/TemplateJumplinks/TemplateJumplinks.schema.ts`. */
export interface TemplateJumplinksFields {
  /** ID. Used for deep linking, tracking, etc. */
  id?: string;
  /** Description. Required. Accessibility description for screen readers. */
  description?: string;
  /** Module Options. Layout and display options. */
  options?: string[];
  /** Title. Optional headline title. */
  title?: string;
  /** Links */
  links?: {
    label?: string;
    ariaLabel?: string;
    href?: string;
  }[];
}

/** Generated from `/templates/TemplatePoweredBy/TemplatePoweredBy.schema.ts`. */
export interface TemplatePoweredByFields {
  /** ID. Used for deep linking, tracking, etc. */
  id?: string;
  /** Module Options. Layout and display options. */
  options?: string[];
  /** Title */
  title?: string;
  /** Logos */
  logos?: {
    /** Logo image */
    logo?: RootCMSImage;
    /** Name */
    name?: string;
  }[];
  /** Body copy */
  body?: RootCMSRichText;
}